spark.sql("insert into targetuser select p.Person_ID, concat(p.Initial_name,'.', p.First_name, p.Last_name), g.Gender_code, FLOOR(year(CURRENT_DATE) - year(p.DOB)), concat('+', c.Telephonic_code, p.phone_no), p.Country_name from person p join gender g on p.person_id = g.person_id join country c on p.Country_name = c.Country_name")

df_TargetUser.write.format("csv").option("header", "true").save("/home/ubh01/Downloads/targetuser.csv")

spark.sql("insert into TargetVideo select v.Video_ID, v.Person_ID, cat.category_name as Video_Category, v.Min_age as Age_Gate, p.country_name, v.publish_date,  v.likes-v.dislikes as Engagement, CASE WHEN Views <= 4000000 THEN 'Low' WHEN Views > 4000000 AND Views <= 8000000 THEN 'Medium' ELSE 'High' END, v.views as Total_views, CASE WHEN DATEDIFF(CURRENT_DATE, Publish_date) = 0 THEN Views ELSE Views / (DATEDIFF(CURRENT_DATE, Publish_date) + 1) END AS average_views_per_day from content v join content_category cat on v.category_ID = cat.category_ID join person p on v.person_ID = p.person_ID")

df_TargetVideo.write.format("csv").option("header", "true").save("/home/ubh01/Downloads/targetvideo.csv")
